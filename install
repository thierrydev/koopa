#!/usr/bin/env bash
set -Eeu -o pipefail

install() {
    # """
    # koopa installer.
    # Updated 2020-07-08.
    # """
    local dep deps git_url json json_url pos release repo tag_name tarball_url
    repo='acidgenomics/koopa'
    release='rolling'
    pos=()
    while (("$#"))
    do
        case "$1" in
        --release=*)
            release="${1#*=}"
            shift 1
            ;;
        --release)
            release="$2"
            shift 2
            ;;
        *)
            pos+=("$1")
            shift 1
            ;;
        esac
    done
    [[ "${#pos[@]}" -gt 0 ]] && set -- "${pos[@]}"
    deps=(
        'cp'
        'curl'
        'find'
        'git'
        'grep'
        'mkdir'
        'mktemp'
        'mv'
        'rm'
        'tar'
    )
    for dep in "${deps[@]}"
    do
        if ! is_installed "$dep"
        then
            >&2 print \
                "ERROR: \"${dep}\" is not installed." \
                "Required dependencies: \"${deps[*]}\"."
            return 1
        fi
    done
    if [[ "$release" == 'rolling' ]]
    then
        git_url="https://github.com/${repo}.git"
        # Alternatively, here's how to get master branch tarball:
        # > tarball_url="https://github.com/${repo}/tarball/master"
        print \
            'Installing koopa.' \
            "Git URL: \"${git_url}\"" \
            'Using rolling release from master branch.' \
            'This can be updated using "koopa update".'
    else
        json_url="https://api.github.com/repos/${repo}/releases/${release}"
        json="$(curl -s "$json_url")"
        tarball_url="$( \
            print "$json" \
                | grep '"tarball_url":' \
                | cut -d '"' -f 4 \
        )"
        tag_name="$( \
            print "$json" \
                | grep '"tag_name":' \
                | cut -d '"' -f 4 \
        )"
        print \
            "Installing koopa (${tag_name})." \
            'This is a stable release that cannot be updated.'
    fi
    tmp_dir="$(mktemp -d)"
    (
        cd "$tmp_dir" || exit 1
        if [[ "$release" == 'rolling' ]]
        then
            git clone --recursive "$git_url" 'koopa'
            cd koopa || exit 1
        else
            file='koopa.tar.gz'
            curl --location --output "$file" "$tarball_url"
            tar -xzf "$file"
            cd 'acidgenomics-koopa-'* || exit 1
        fi
        chmod +x 'install'
        './install' "$@"
    )
    rm -fr "$tmp_dir"
    return 0
}

is_installed() {
    local arg
    for arg in "$@"
    do
        command -v "$arg" >/dev/null || return 1
    done
    return 0
}

print() {
    local arg
    for arg in "$@"
    do
        printf '%b\n' "$arg"
    done
    return 0
}

install "$@"
